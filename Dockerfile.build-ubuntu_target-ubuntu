# Build this Connectivity Plugin
ARG APAMA_VERSION=10.3
ARG APAMA_BUILDER=store/softwareag/apama-builder:${APAMA_VERSION}
ARG APAMA_IMAGE=store/softwareag/apama-correlator:${APAMA_VERSION}

# Get the official Apama Builder image from the SoftwareAG area of Docker Store.  
# (You must have "checked-out"/"subscribed" at https://store.docker.com/images/softwareag-apama-builder
# and be logged in to the Docker daemon with the same user ID.)
FROM ${APAMA_BUILDER} as builder

# Use Ubuntu as the image we add the g++ compiler to and do the compile/test cycle within
FROM ubuntu:latest as compiler

COPY --from=builder /opt/softwareag /opt/softwareag

ENV \
	APAMA_HOME=/opt/softwareag/Apama \
	APAMA_WORK=/apama_work
ENV \
   PATH=${APAMA_HOME}/bin:${PATH} \
	LD_LIBRARY_PATH=${APAMA_HOME}/lib:${APAMA_WORK}/lib \
	PYTHONPATH=${APAMA_HOME}/third_party/python/lib/python3.6/site-packages:${LD_LIBRARY_PATH}

# install g++ 8 and python 3 (this part takes a while first time)
RUN apt-get update && apt-get install -y g++-8 python3

COPY . $APAMA_WORK/apama-logstatus-codec

RUN mkdir -p $APAMA_WORK/lib 
RUN g++-8 -std=c++11 --shared -fPIC -o $APAMA_WORK/lib/libLogStatusCodec.so $APAMA_WORK/apama-logstatus-codec/LogStatusCodec.cpp -I$APAMA_HOME/include -lapclient -L$APAMA_HOME/lib

RUN cd ${APAMA_WORK}/apama-logstatus-codec/tests && pysys run | tee logfile && grep 'THERE WERE NO NON PASSES' logfile

# Now make our final resulting image
FROM ubuntu:latest

ENV \
	APAMA_HOME=/opt/softwareag/Apama \
	APAMA_WORK=/apama_work
ENV \
	PATH=${APAMA_HOME}/bin \
	LD_LIBRARY_PATH=${APAMA_HOME}/lib:${APAMA_WORK}/lib \
	PYTHONPATH=${APAMA_HOME}/third_party/python/lib/python3.6/site-packages

COPY --from=builder  /opt/softwareag /opt/softwareag
COPY --from=compiler ${APAMA_WORK}/lib ${APAMA_WORK}/lib

WORKDIR ${APAMA_WORK}
CMD ["correlator"]
